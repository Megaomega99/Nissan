# Multi-stage build for optimized production image
FROM node:18-alpine AS dependencies
# Alpine Linux is lighter and more secure for production

# Install build dependencies
RUN apk add --no-cache python3 make g++ git

WORKDIR /app

# Copy package files separately for better layer caching
COPY package*.json ./

# Clean npm cache and install dependencies with specific flags
RUN npm cache clean --force && \
    npm install --legacy-peer-deps --no-audit --no-fund

# Development stage
FROM node:18-alpine AS development

WORKDIR /app

# Copy dependencies from previous stage
COPY --from=dependencies /app/node_modules ./node_modules
COPY package*.json ./
COPY . ./

# Expose development port
EXPOSE 3000

# Start development server
CMD ["npm", "start"]

# Build stage
FROM node:18-alpine AS build

WORKDIR /app

# Copy dependencies and source code
COPY --from=dependencies /app/node_modules ./node_modules
COPY package*.json ./
COPY . ./

# Set CI=false to ignore warnings as errors during build
ENV CI=false
ENV NODE_OPTIONS=--max-old-space-size=4096

# Build the application
RUN npm run build

# Production stage - using nginx for better performance
FROM nginx:alpine AS production

# Install Node.js for runtime if needed
RUN apk add --no-cache nodejs npm

# Copy custom nginx configuration if needed
COPY --from=build /app/nginx.conf /etc/nginx/conf.d/default.conf 2>/dev/null || true

# Copy built application
COPY --from=build /app/build /usr/share/nginx/html

# Copy package.json for serve fallback
COPY --from=build /app/package*.json /app/

# Install serve as fallback
RUN cd /app && npm install -g serve

# Create a startup script that can use either nginx or serve
RUN echo '#!/bin/sh' > /start.sh && \
    echo 'if [ "$USE_SERVE" = "true" ]; then' >> /start.sh && \
    echo '  serve -s /usr/share/nginx/html -l 3000' >> /start.sh && \
    echo 'else' >> /start.sh && \
    echo '  nginx -g "daemon off;"' >> /start.sh && \
    echo 'fi' >> /start.sh && \
    chmod +x /start.sh

# Expose port
EXPOSE 3000 80

# Use the startup script
CMD ["/start.sh"]